sudo: required
dist: xenial
language: c
env:
  global:
  - DEPLOY_USER=delta DEPLOY_SERVER="py.delta.chat"
  matrix:
  - MESONARGS="" DOCS=t TESTS=t
  - MESONARGS="-Dmonolith=true" TESTS=t
  - MESONARGS="--default-library=static"
  - MESONARGS="--wrap-mode=forcefallback --default-library=static"
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - python3-pip
    - python3.5
    - g++-7
    - libssl-dev
    - libsqlite3-dev
    - libbz2-dev
    - zlib1g-dev
    - python3.5-dev
    - python-software-properties
    - libsasl2-dev
    - doxygen
install:
- export CC=gcc-7
- export CXX=g++-7
- sudo ln -sf /usr/bin/python3.5 /usr/bin/python3
- virtualenv -p /usr/bin/python3.5 venv
- source venv/bin/activate
- pip install meson
- wget https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip
- unzip ninja-linux.zip
- sudo cp ninja /usr/bin

script:
- source venv/bin/activate
- doxygen --version
- mkdir -p builddir && pushd builddir
- meson $MESONARGS && ninja -v && sudo ninja install
- export LD_LIBRARY_PATH=/usr/local/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
- sudo ldconfig -v
- popd && pushd docs
- if [ -n "$DOCS" ]; then doxygen; fi
- popd && pushd python
- virtualenv -p /usr/bin/python3.5 venv
- source venv/bin/activate
- pip install tox
- if [ -e /usr/local/lib/x86_64-linux-gnu/libdeltachat.so ]; then ldd /usr/local/lib/x86_64-linux-gnu/libdeltachat.so;
  fi
- if [ -n "$TESTS" ]; then bash $TRAVIS_BUILD_DIR/.scripts/run-tests.sh ; fi
- if [ -n "$DOCS" ]; then tox -e doc; fi
- popd
deploy:
  provider: script
  skip_cleanup: true
  script: bash $TRAVIS_BUILD_DIR/.scripts/deploy.sh
  on:
    all_branches: true
    condition: "$DOCS"
